{"version":3,"sources":["core/config/layout.ts","core/components/SettingsDrawer.tsx","core/components/Footer.tsx","landing/components/LandingLayout.tsx","landing/pages/Landing.tsx"],"names":["drawerCollapsedWidth","drawerWidth","SettingsDrawer","onDrawerToggle","open","useSettings","changeCollapsed","changeDirection","changeMode","collapsed","direction","mode","useTranslation","i18n","t","anchor","onClose","sx","width","variant","display","justifyContent","alignItems","p","color","onClick","edge","pl","pr","gutterBottom","id","marginTop","aria-label","name","onChange","event","changeLanguage","target","value","language","control","label","exclusive","fullWidth","_","Footer","Box","component","Typography","align","Link","RouterLink","to","process","Date","getFullYear","LandingLayout","children","useState","settingsOpen","setSettingsOpen","handleSettingsToggle","Paper","square","AppBar","position","Toolbar","Logo","size","mr","noWrap","flexGrow","IconButton","features","Landing","userInfo","useAuth","theme","useTheme","py","Container","maxWidth","marginBottom","Stack","pt","spacing","Button","href","rel","firstName","alt","src","palette","style","borderRadius","borderStyle","borderWidth","borderColor","background","default","List","map","feature","index","ListItem","ListItemAvatar","Avatar","ListItemText","primary","mt"],"mappings":"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","file":"static/js/33.cc08f6ca.chunk.js","sourcesContent":["export const drawerCollapsedWidth = 104;\r\nexport const drawerWidth = 280;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport ToggleButton from \"@material-ui/core/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/core/ToggleButtonGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { drawerWidth } from \"../config/layout\";\r\nimport { useSettings } from \"../contexts/SettingsProvider\";\r\n\r\ntype SettingsDrawerProps = {\r\n  onDrawerToggle: () => void;\r\n  open: boolean;\r\n};\r\n\r\nconst SettingsDrawer = ({ onDrawerToggle, open }: SettingsDrawerProps) => {\r\n  const {\r\n    changeCollapsed,\r\n    changeDirection,\r\n    changeMode,\r\n    collapsed,\r\n    direction,\r\n    mode,\r\n  } = useSettings();\r\n  const { i18n, t } = useTranslation();\r\n\r\n  const handleDirectionChange = (_: any, direction: \"ltr\" | \"rtl\") => {\r\n    changeDirection(direction);\r\n  };\r\n\r\n  const handleLanguageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    i18n.changeLanguage((event.target as HTMLInputElement).value);\r\n  };\r\n\r\n  const handleModeChange = (_: any, mode: string) => {\r\n    changeMode(mode);\r\n  };\r\n\r\n  const handleSidebarChange = (_: any, collapsed: boolean) => {\r\n    changeCollapsed(collapsed);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      open={open}\r\n      onClose={onDrawerToggle}\r\n      sx={{\r\n        \"& .MuiDrawer-paper\": {\r\n          width: drawerWidth,\r\n        },\r\n      }}\r\n      variant=\"temporary\"\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          p: 2,\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\">{t(\"settings.drawer.title\")}</Typography>\r\n        <IconButton color=\"inherit\" onClick={onDrawerToggle} edge=\"end\">\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </Box>\r\n      <Box sx={{ pl: 2, pr: 2 }}>\r\n        <Typography\r\n          gutterBottom\r\n          id=\"settings-language\"\r\n          marginTop={3}\r\n          variant=\"h6\"\r\n        >\r\n          {t(\"settings.drawer.language.label\")}\r\n        </Typography>\r\n        <FormControl>\r\n          <RadioGroup\r\n            aria-label=\"language\"\r\n            name=\"language-radio-group\"\r\n            onChange={handleLanguageChange}\r\n            value={i18n.language}\r\n          >\r\n            <FormControlLabel\r\n              value=\"en\"\r\n              control={<Radio />}\r\n              label={t(\"settings.drawer.language.options.en\")}\r\n            />\r\n            <FormControlLabel\r\n              value=\"fr\"\r\n              control={<Radio />}\r\n              label={t(\"settings.drawer.language.options.fr\")}\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\r\n          {t(\"settings.drawer.mode.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={mode}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleModeChange}\r\n        >\r\n          <ToggleButton value=\"light\">\r\n            {t(\"settings.drawer.mode.options.light\")}\r\n          </ToggleButton>\r\n          <ToggleButton value=\"dark\">\r\n            {t(\"settings.drawer.mode.options.dark\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\r\n          {t(\"settings.drawer.direction.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={direction}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleDirectionChange}\r\n        >\r\n          <ToggleButton value=\"ltr\">\r\n            {t(\"settings.drawer.direction.options.ltr\")}\r\n          </ToggleButton>\r\n          <ToggleButton value=\"rtl\">\r\n            {t(\"settings.drawer.direction.options.rtl\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n        <Typography\r\n          gutterBottom\r\n          id=\"settings-sidebar\"\r\n          marginTop={3}\r\n          variant=\"h6\"\r\n        >\r\n          {t(\"settings.drawer.sidebar.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={collapsed}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleSidebarChange}\r\n        >\r\n          <ToggleButton value={true}>\r\n            {t(\"settings.drawer.sidebar.options.collapsed\")}\r\n          </ToggleButton>\r\n          <ToggleButton value={false}>\r\n            {t(\"settings.drawer.sidebar.options.full\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SettingsDrawer;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Box sx={{ p: 6 }} component=\"footer\">\r\n      <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\r\n        {\"© \"}\r\n        <Link\r\n          color=\"inherit\"\r\n          component={RouterLink}\r\n          to={`/${process.env.PUBLIC_URL}/`}\r\n        >\r\n          {process.env.REACT_APP_NAME}\r\n        </Link>{\" \"}\r\n        {new Date().getFullYear()}\r\n        {\".\"}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport React, { useState } from \"react\";\r\nimport Footer from \"../../core/components/Footer\";\r\nimport Logo from \"../../core/components/Logo\";\r\nimport SettingsDrawer from \"../../core/components/SettingsDrawer\";\r\n\r\ntype LandingLayoutProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst LandingLayout = ({ children }: LandingLayoutProps) => {\r\n  const [settingsOpen, setSettingsOpen] = useState(false);\r\n\r\n  const handleSettingsToggle = () => {\r\n    setSettingsOpen(!settingsOpen);\r\n  };\r\n\r\n  return (\r\n    <Paper square>\r\n      <AppBar color=\"transparent\" position=\"relative\">\r\n        <Toolbar>\r\n          <Logo size={24} sx={{ mr: 2 }} />\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap sx={{ flexGrow: 1 }}>\r\n            {process.env.REACT_APP_NAME}\r\n          </Typography>\r\n          <IconButton\r\n            color=\"default\"\r\n            aria-label=\"settings\"\r\n            component=\"span\"\r\n            onClick={handleSettingsToggle}\r\n          >\r\n            <SettingsIcon />\r\n          </IconButton>\r\n          <SettingsDrawer\r\n            onDrawerToggle={handleSettingsToggle}\r\n            open={settingsOpen}\r\n          />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main>{children}</main>\r\n      <Footer />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default LandingLayout;\r\n","import Avatar from \"@material-ui/core/Avatar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Stack from \"@material-ui/core/Stack\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useAuth } from \"../../auth/contexts/AuthProvider\";\r\nimport LandingLayout from \"../components/LandingLayout\";\r\n\r\nconst features = [\r\n  { name: \"Bootstraped with Create React App\" },\r\n  { name: \"Components & Themes built on top of Material-UI\" },\r\n  { name: \"Data Fetching with React Query\" },\r\n  { name: \"Written in TypeScript\" },\r\n  { name: \"Real-world examples\" },\r\n  { name: \"Best Practices\" },\r\n  { name: \"MIT License\" },\r\n];\r\n\r\nconst Landing = () => {\r\n  const { userInfo } = useAuth();\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <LandingLayout>\r\n      <main>\r\n        <Box\r\n          sx={{\r\n            py: 6,\r\n          }}\r\n        >\r\n          <Container maxWidth=\"sm\">\r\n            <Typography\r\n              variant=\"h1\"\r\n              align=\"center\"\r\n              color=\"text.primary\"\r\n              marginBottom={4}\r\n            >\r\n              {t(\"landing.title\")}\r\n            </Typography>\r\n            <Stack\r\n              sx={{ pt: 3 }}\r\n              direction=\"row\"\r\n              spacing={2}\r\n              justifyContent=\"center\"\r\n            >\r\n              <Button\r\n                component=\"a\"\r\n                href={process.env.REACT_APP_SOURCE_LINK}\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n                variant=\"outlined\"\r\n              >\r\n                {t(\"landing.cta.secondary\")}\r\n              </Button>\r\n              {userInfo ? (\r\n                <Button\r\n                  component={RouterLink}\r\n                  to={`/${process.env.PUBLIC_URL}/admin`}\r\n                  variant=\"contained\"\r\n                >\r\n                  {t(\"landing.cta.mainAuth\", { name: userInfo.firstName })}\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  component={RouterLink}\r\n                  to={`/${process.env.PUBLIC_URL}/login`}\r\n                  variant=\"contained\"\r\n                >\r\n                  {t(\"landing.cta.main\")}\r\n                </Button>\r\n              )}\r\n            </Stack>\r\n          </Container>\r\n        </Box>\r\n        <Container sx={{ py: 6 }} maxWidth=\"md\">\r\n          <img\r\n            alt=\"Application demo\"\r\n            src={`img/template-${theme.palette.mode}.png`}\r\n            style={{\r\n              borderRadius: 24,\r\n              borderStyle: \"solid\",\r\n              borderWidth: 4,\r\n              borderColor: theme.palette.background.default,\r\n              width: \"100%\",\r\n            }}\r\n          />\r\n        </Container>\r\n        <Container sx={{ py: 8 }} maxWidth=\"md\">\r\n          <Stack alignItems=\"center\">\r\n            <Typography\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"text.primary\"\r\n              gutterBottom\r\n            >\r\n              {t(\"landing.features.title\")}\r\n            </Typography>\r\n            <List sx={{ pt: 3 }}>\r\n              {features.map((feature, index) => (\r\n                <ListItem key={index}>\r\n                  <ListItemAvatar>\r\n                    <Avatar>\r\n                      <StarIcon />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary={feature.name} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            <Button\r\n              component=\"a\"\r\n              href={process.env.REACT_APP_SOURCE_LINK}\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              sx={{ mt: 3 }}\r\n              variant=\"outlined\"\r\n            >\r\n              {t(\"landing.features.more\")}\r\n            </Button>\r\n          </Stack>\r\n        </Container>\r\n      </main>\r\n    </LandingLayout>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n"],"sourceRoot":""}